jobs:
- job: Build
  pool:
    vmImage: $(vmImage)
  variables:
  - template: ${{parameters.deployYmlChildPath}}
  steps:   
    - task: NuGetToolInstaller@1
      displayName: 'Install NuGet'

    - task: DotNetCoreCLI@2
      displayName: Nuget Restore
      inputs:
        command: 'restore'
        projects: '**/*$(projectName).csproj'
        feedsToUse: 'config'
        nugetConfigPath: 'nuget.config'

    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloud'
        organization: '$(sonarCloudOrganization)'
        scannerMode: 'MSBuild'
        projectKey: '$(sonarCloudProjectKey)'
        projectName: '$(sonarCloudProjectName)'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Agent.TempDirectory)/**/coverage.opencover.xml

    - task: DotNetCoreCLI@2
      displayName: Build and Pack
      inputs:
          command: 'pack'
          packagesToPack: '**/*$(projectName).csproj'
          arguments: --output $(Build.ArtifactStagingDirectory) --configuration $(buildConfiguration) /p:Version=$(version)
      
    - task: DotNetCoreCLI@2
      name: Tests_net8
      displayName: 'Tests NET8'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--framework net8 --configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'      
    
    - task: DotNetCoreCLI@2
      name: Tests_net9
      displayName: 'Tests NET9'
      inputs:
        command: 'test'
        projects: '**/*Tests.csproj'
        arguments: '--framework net9 --configuration $(buildConfiguration) --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover'
    
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish Code Coverage Results'
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'
        reportDirectory: '$(Agent.TempDirectory)'
        failIfCoverageEmpty: false

    - task: SonarCloudAnalyze@1      

    - task: SonarCloudPublish@1      
      inputs:
        pollingTimeoutSec: '300'

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: $(artifactName)